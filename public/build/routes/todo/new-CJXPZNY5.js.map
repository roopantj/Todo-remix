{
  "version": 3,
  "sources": ["browser-route-module:D:\\my-remix-app\\app\\routes\\todo\\new.tsx?browser", "../../../../app/routes/todo/new.tsx"],
  "sourcesContent": ["export { default, links } from \"D:\\\\my-remix-app\\\\app\\\\routes\\\\todo\\\\new.tsx\";", "import { ActionFunction, json, redirect, useActionData } from \"remix\";\r\nimport { db } from \"~/utils/db.server\";\r\nimport { getUserId } from \"~/utils/session.server\";\r\nimport type { LinksFunction } from \"remix\";\r\nimport stylesUrl from \"~/styles/login.css\";\r\nexport const links: LinksFunction = () => {\r\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\r\n};\r\ntype ActionData = {\r\n  formError?: string;\r\n  name?: string;\r\n};\r\nconst badRequest = (data: ActionData) => {\r\n  return json(data, { status: 400 });\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const userId = await getUserId(request);\r\n  const form = await request.formData();\r\n  const todoName = form.get(\"name\");\r\n  if (typeof todoName !== \"string\") {\r\n    return badRequest({ formError: \"Invalid todo\" });\r\n  }\r\n  if (todoName.length < 3) {\r\n    return badRequest({ name: todoName, formError: \"Todo too short\" });\r\n  }\r\n  const todo = await db.todo.create({\r\n    data: { userid: userId, name: todoName, completed: false },\r\n  });\r\n  return redirect(`/todo/${todo.id}`);\r\n};\r\nexport default function NewTodo() {\r\n  const actionData = useActionData<ActionData>();\r\n  return (\r\n    <form method=\"post\">\r\n      <label>\r\n        Todo :{\" \"}\r\n        <input\r\n          defaultValue={actionData?.name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter new todo\"\r\n        />\r\n      </label>\r\n      <span>{actionData?.formError}</span>\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AACA,gBAAmB;AACnB,qBAA0B;AAGnB,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAyBtB,mBAAmB;AAChC,QAAM,aAAa;AACnB,SACE,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,oCAAC,SAAD,MAAO,UACE,KACP,oCAAC,SAAD;AAAA,IACE,cAAc,yCAAY;AAAA,IAC1B,MAAK;AAAA,IACL,MAAK;AAAA,IACL,aAAY;AAAA,OAGhB,oCAAC,QAAD,MAAO,yCAAY,YACnB,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,KAAS;AAAA;",
  "names": []
}
