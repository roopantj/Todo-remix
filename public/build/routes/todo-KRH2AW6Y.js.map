{
  "version": 3,
  "sources": ["browser-route-module:D:\\my-remix-app\\app\\routes\\todo.tsx?browser", "../../../app/routes/todo.tsx", "../../../app/components/Header.tsx"],
  "sourcesContent": ["export { default, links } from \"D:\\\\my-remix-app\\\\app\\\\routes\\\\todo.tsx\";", "import { Outlet, LoaderFunction, ActionFunction, useLoaderData } from \"remix\";\r\nimport { requireUserId, logout } from \"~/utils/session.server\";\r\nimport { db } from \"~/utils/db.server\";\r\nimport Header from \"~/components/Header\";\r\nimport type { LinksFunction } from \"remix\";\r\nimport stylesUrl from \"~/styles/index.css\";\r\nexport const links: LinksFunction = () => {\r\n  return [{ rel: \"stylesheet\", href: stylesUrl }];\r\n};\r\ntype LoaderData = {\r\n  id: string;\r\n  username: string;\r\n};\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const userId = await requireUserId(request);\r\n  const user = await db.user.findUnique({\r\n    where: { id: userId },\r\n    select: { id: true, username: true },\r\n  });\r\n  return user;\r\n};\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  return logout(request);\r\n};\r\nexport default function Todo() {\r\n  const user: LoaderData = useLoaderData();\r\n  return (\r\n    <div>\r\n      <Header user={user.username} />\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n", "import { Link } from \"remix\";\r\ninterface props {\r\n  user: string;\r\n}\r\nconst Header = ({ user }: props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"brand\">\r\n        <h1>Welcome {user}</h1>\r\n      </div>\r\n      <div className=\"actions\">\r\n        <Link to=\"/todo\">Todo List</Link>\r\n        <Link to=\"/todo/new\">Add new Todo</Link>\r\n        <form action=\"/logout\" method=\"post\">\r\n          <button type=\"submit\">Logout</button>\r\n        </form>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AACA,qBAAsC;AACtC,gBAAmB;;;ACFnB;AAIA,IAAM,SAAS,CAAC,EAAE,WAAkB;AAClC,SACE,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KAChB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD,MAAI,YAAS,QAEf,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAQ,cACjB,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,KAAY,iBACrB,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAU,QAAO;AAAA,KAC5B,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,KAAS;AAAA;AAMhC,IAAO,iBAAQ;;;ADdR,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAiBtB,gBAAgB;AAC7B,QAAM,OAAmB;AACzB,SACE,oCAAC,OAAD,MACE,oCAAC,gBAAD;AAAA,IAAQ,MAAM,KAAK;AAAA,MACnB,oCAAC,QAAD;AAAA;",
  "names": []
}
